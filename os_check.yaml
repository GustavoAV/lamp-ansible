---
- name: "Checks supported OS"
  ansible.builtin.command:
    cmd: grep --ignore-case --quiet 'ubuntu' /etc/os-release
  register: ubuntu_or_ubuntu_based
  changed_when: ubuntu_or_ubuntu_based.rc != 0

- name: "Fails if not supported OS"
  ansible.builtin.fail:
    msg: "OS or version not supported!"
  when: not (ubuntu_or_ubuntu_based and
    ansible_facts['distribution_major_version'] | int >= 20)

- name: "Set distro_codename if Ubuntu"
  ansible.builtin.set_fact:
    distro_codename: "{{ ansible_facts['distribution_release'] }}"
  when: ansible_facts['distribution'] == "Ubuntu"

- name: "Get Ubuntu codename if Ubuntu based"
  ansible.builtin.command:
    cmd: sed --quiet "s/UBUNTU_CODENAME=//p" /etc/os-release
  register: ubuntu_codename
  changed_when: ubuntu_codename.rc != 0
  when: not ansible_facts['distribution'] == "Ubuntu"

- name: "Set distro_codename if Ubuntu based"
  ansible.builtin.set_fact:
    distro_codename: "{{ ubuntu_codename.stdout }}"
  when: not ansible_facts['distribution'] == "Ubuntu"

- name: "Get machine architecture"
  ansible.builtin.command:
    cmd: dpkg --print-architecture
  register: machine_arch
  changed_when: false

- name: "Set dpkg_architecture fact"
  ansible.builtin.set_fact:
    dpkg_architecture: "{{ machine_arch.stdout }}"
